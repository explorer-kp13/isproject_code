{"ast":null,"code":"var _jsxFileName = \"/Users/karanpunjabi/Desktop/LAB MJ/folium 3 copy/src/Mapcomponent.js\",\n  _s = $RefreshSig$();\n// MapComponent.js\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport { Icon, divIcon, point } from \"leaflet\";\nimport { coordinatesData } from \"./coordinates\"; // Import coordinatesData from coordinates.js\n\n// Define icons for different types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supplierIcon = new Icon({\n  iconUrl: require(\"./icons/supplier-icon.png\"),\n  iconSize: [38, 38]\n});\nconst marketIcon = new Icon({\n  iconUrl: require(\"./icons/market-icon.png\"),\n  iconSize: [38, 38]\n});\nconst dryPortIcon = new Icon({\n  iconUrl: require(\"./icons/dry-port-icon.png\"),\n  iconSize: [38, 38]\n});\nconst originDestIcon = new Icon({\n  iconUrl: require(\"./icons/origin-dest-icon.png\"),\n  iconSize: [38, 38]\n});\nconst createClusterCustomIcon = function (cluster) {\n  return new divIcon({\n    html: \"<span class=\\\"cluster-icon\\\">\".concat(cluster.getChildCount(), \"</span>\"),\n    className: \"custom-marker-cluster\",\n    iconSize: point(33, 33, true)\n  });\n};\nconst initialTextAreaValue = '';\nexport default function MapComponent() {\n  _s();\n  const [textAreaValue, setTextAreaValue] = useState(initialTextAreaValue);\n  const [selectedType, setSelectedType] = useState(null);\n  const handleChange = event => {\n    setTextAreaValue(event.target.value);\n  };\n  const handleTypeFilter = type => {\n    setSelectedType(type === selectedType ? null : type);\n  };\n\n  // Filter markers based on the selected type\n  const filteredMarkers = selectedType ? coordinatesData.filter(coordinate => coordinate.type === selectedType) : coordinatesData;\n\n  // Function to get the appropriate icon based on the type\n  const getIcon = type => {\n    switch (type) {\n      case \"Supplier\":\n        return supplierIcon;\n      case \"Market\":\n        return marketIcon;\n      case \"Dry Port\":\n        return dryPortIcon;\n      case \"Origin/Dest\":\n        return originDestIcon;\n      default:\n        return supplierIcon;\n      // Default icon\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTypeFilter(\"Supplier\"),\n        children: \"Supplier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTypeFilter(\"Market\"),\n        children: \"Market\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTypeFilter(\"Dry Port\"),\n        children: \"Dry Port\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTypeFilter(\"Origin/Dest\"),\n        children: \"Origin/Dest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedType(null),\n        children: \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [23.6850, 90.3563],\n      zoom: 7,\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        iconCreateFunction: createClusterCustomIcon,\n        children: filteredMarkers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.latitude, marker.longitude],\n          icon: getIcon(marker.type),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: marker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"QQIECoQkkXhrcAk5r8Z7gjKNa7Y=\");\n_c = MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","MarkerClusterGroup","Icon","divIcon","point","coordinatesData","jsxDEV","_jsxDEV","supplierIcon","iconUrl","require","iconSize","marketIcon","dryPortIcon","originDestIcon","createClusterCustomIcon","cluster","html","concat","getChildCount","className","initialTextAreaValue","MapComponent","_s","textAreaValue","setTextAreaValue","selectedType","setSelectedType","handleChange","event","target","value","handleTypeFilter","type","filteredMarkers","filter","coordinate","getIcon","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","attribution","url","chunkedLoading","iconCreateFunction","map","marker","index","position","latitude","longitude","icon","name","_c","$RefreshReg$"],"sources":["/Users/karanpunjabi/Desktop/LAB MJ/folium 3 copy/src/Mapcomponent.js"],"sourcesContent":["// MapComponent.js\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport { Icon, divIcon, point } from \"leaflet\";\nimport { coordinatesData } from \"./coordinates\"; // Import coordinatesData from coordinates.js\n\n// Define icons for different types\nconst supplierIcon = new Icon({\n  iconUrl: require(\"./icons/supplier-icon.png\"),\n  iconSize: [38, 38]\n});\n\nconst marketIcon = new Icon({\n  iconUrl: require(\"./icons/market-icon.png\"),\n  iconSize: [38, 38]\n});\n\nconst dryPortIcon = new Icon({\n  iconUrl: require(\"./icons/dry-port-icon.png\"),\n  iconSize: [38, 38]\n});\n\nconst originDestIcon = new Icon({\n  iconUrl: require(\"./icons/origin-dest-icon.png\"),\n  iconSize: [38, 38]\n});\n\nconst createClusterCustomIcon = function (cluster) {\n  return new divIcon({\n    html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\n    className: \"custom-marker-cluster\",\n    iconSize: point(33, 33, true)\n  });\n};\n\nconst initialTextAreaValue = '';\n\nexport default function MapComponent() {\n  const [textAreaValue, setTextAreaValue] = useState(initialTextAreaValue);\n  const [selectedType, setSelectedType] = useState(null);\n\n  const handleChange = (event) => {\n    setTextAreaValue(event.target.value);\n  };\n\n  const handleTypeFilter = (type) => {\n    setSelectedType(type === selectedType ? null : type);\n  };\n  \n\n  // Filter markers based on the selected type\n  const filteredMarkers = selectedType\n    ? coordinatesData.filter((coordinate) => coordinate.type === selectedType)\n    : coordinatesData;\n\n  // Function to get the appropriate icon based on the type\n  const getIcon = (type) => {\n    switch (type) {\n      case \"Supplier\":\n        return supplierIcon;\n      case \"Market\":\n        return marketIcon;\n      case \"Dry Port\":\n        return dryPortIcon;\n      case \"Origin/Dest\":\n        return originDestIcon;\n      default:\n        return supplierIcon; // Default icon\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"button-container\">\n        <button onClick={() => handleTypeFilter(\"Supplier\")}>Supplier</button>\n        <button onClick={() => handleTypeFilter(\"Market\")}>Market</button>\n        <button onClick={() => handleTypeFilter(\"Dry Port\")}>Dry Port</button>\n        <button onClick={() => handleTypeFilter(\"Origin/Dest\")}>Origin/Dest</button>\n        <button onClick={() => setSelectedType(null)}>Show All</button>\n      </div>\n      <MapContainer center={[23.6850, 90.3563]} zoom={7} className=\"map-container\">\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <MarkerClusterGroup\n          chunkedLoading\n          iconCreateFunction={createClusterCustomIcon}\n        >\n          {filteredMarkers.map((marker, index) => (\n            <Marker key={index} position={[marker.latitude, marker.longitude]} icon={getIcon(marker.type)}>\n              <Popup>{marker.name}</Popup>\n            </Marker>\n          ))}\n        </MarkerClusterGroup>\n      </MapContainer>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,SAASC,IAAI,EAAEC,OAAO,EAAEC,KAAK,QAAQ,SAAS;AAC9C,SAASC,eAAe,QAAQ,eAAe,CAAC,CAAC;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,IAAIN,IAAI,CAAC;EAC5BO,OAAO,EAAEC,OAAO,CAAC,2BAA2B,CAAC;EAC7CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG,IAAIV,IAAI,CAAC;EAC1BO,OAAO,EAAEC,OAAO,CAAC,yBAAyB,CAAC;EAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAME,WAAW,GAAG,IAAIX,IAAI,CAAC;EAC3BO,OAAO,EAAEC,OAAO,CAAC,2BAA2B,CAAC;EAC7CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMG,cAAc,GAAG,IAAIZ,IAAI,CAAC;EAC9BO,OAAO,EAAEC,OAAO,CAAC,8BAA8B,CAAC;EAChDC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMI,uBAAuB,GAAG,SAAAA,CAAUC,OAAO,EAAE;EACjD,OAAO,IAAIb,OAAO,CAAC;IACjBc,IAAI,kCAAAC,MAAA,CAAgCF,OAAO,CAACG,aAAa,CAAC,CAAC,YAAS;IACpEC,SAAS,EAAE,uBAAuB;IAClCT,QAAQ,EAAEP,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI;EAC9B,CAAC,CAAC;AACJ,CAAC;AAED,MAAMiB,oBAAoB,GAAG,EAAE;AAE/B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAACyB,oBAAoB,CAAC;EACxE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMgC,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,gBAAgB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCN,eAAe,CAACM,IAAI,KAAKP,YAAY,GAAG,IAAI,GAAGO,IAAI,CAAC;EACtD,CAAC;;EAGD;EACA,MAAMC,eAAe,GAAGR,YAAY,GAChCrB,eAAe,CAAC8B,MAAM,CAAEC,UAAU,IAAKA,UAAU,CAACH,IAAI,KAAKP,YAAY,CAAC,GACxErB,eAAe;;EAEnB;EACA,MAAMgC,OAAO,GAAIJ,IAAI,IAAK;IACxB,QAAQA,IAAI;MACV,KAAK,UAAU;QACb,OAAOzB,YAAY;MACrB,KAAK,QAAQ;QACX,OAAOI,UAAU;MACnB,KAAK,UAAU;QACb,OAAOC,WAAW;MACpB,KAAK,aAAa;QAChB,OAAOC,cAAc;MACvB;QACE,OAAON,YAAY;MAAE;IACzB;EACF,CAAC;EAED,oBACED,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAkB,QAAA,gBAC/B/B,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAAC,UAAU,CAAE;QAAAM,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtEpC,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAAC,QAAQ,CAAE;QAAAM,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEpC,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAAC,UAAU,CAAE;QAAAM,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtEpC,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAAC,aAAa,CAAE;QAAAM,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5EpC,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,IAAI,CAAE;QAAAW,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNpC,OAAA,CAACV,YAAY;MAAC+C,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;MAACC,IAAI,EAAE,CAAE;MAACzB,SAAS,EAAC,eAAe;MAAAkB,QAAA,gBAC1E/B,OAAA,CAACT,SAAS;QACRgD,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACFpC,OAAA,CAACN,kBAAkB;QACjB+C,cAAc;QACdC,kBAAkB,EAAElC,uBAAwB;QAAAuB,QAAA,EAE3CJ,eAAe,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACjC7C,OAAA,CAACR,MAAM;UAAasD,QAAQ,EAAE,CAACF,MAAM,CAACG,QAAQ,EAAEH,MAAM,CAACI,SAAS,CAAE;UAACC,IAAI,EAAEnB,OAAO,CAACc,MAAM,CAAClB,IAAI,CAAE;UAAAK,QAAA,eAC5F/B,OAAA,CAACP,KAAK;YAAAsC,QAAA,EAAEa,MAAM,CAACM;UAAI;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC,GADjBS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACpB,EAAA,CA7DuBD,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}