{"ast":null,"code":"var _jsxFileName = \"/Users/karanpunjabi/Desktop/LAB MJ/folium 3 copy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Import useState\nimport \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport { Icon, divIcon, point } from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new Icon({\n  iconUrl: require(\"./icons/placeholder.png\"),\n  iconSize: [38, 38]\n});\nconst createClusterCustomIcon = function (cluster) {\n  return new divIcon({\n    html: \"<span class=\\\"cluster-icon\\\">\".concat(cluster.getChildCount(), \"</span>\"),\n    className: \"custom-marker-cluster\",\n    iconSize: point(33, 33, true)\n  });\n};\n\n// Define initial state for the textarea value\nconst initialTextAreaValue = '';\nexport default function App() {\n  _s();\n  // Declare state for textarea value\n  const [textAreaValue, setTextAreaValue] = useState(initialTextAreaValue);\n  const handleChange = event => {\n    setTextAreaValue(event.target.value);\n  };\n  const coordinates1 = [22.321760526446035, 87.30117421167117];\n  const markers = [{\n    geocode: [22.31843237957934, 87.31335712758785],\n    popUp: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Essay:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: textAreaValue,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, {\n    geocode: coordinates1,\n    popUp: \"MMM Hall\"\n  }, {\n    geocode: [22.31692265912584, 87.31720729745814],\n    popUp: \"Nalanda\"\n  }];\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [22.3149, 87.3105],\n    zoom: 15,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n      chunkedLoading: true,\n      iconCreateFunction: createClusterCustomIcon,\n      children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.geocode,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: marker.popUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z7eQEsr89U74yhD5XvJRSi1Y/fY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","MarkerClusterGroup","Icon","divIcon","point","jsxDEV","_jsxDEV","customIcon","iconUrl","require","iconSize","createClusterCustomIcon","cluster","html","concat","getChildCount","className","initialTextAreaValue","App","_s","textAreaValue","setTextAreaValue","handleChange","event","target","value","coordinates1","markers","geocode","popUp","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","center","zoom","attribution","url","chunkedLoading","iconCreateFunction","map","marker","index","position","icon","_c","$RefreshReg$"],"sources":["/Users/karanpunjabi/Desktop/LAB MJ/folium 3 copy/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"; // Import useState\nimport \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport { Icon, divIcon, point } from \"leaflet\";\n\nconst customIcon = new Icon({\n  iconUrl: require(\"./icons/placeholder.png\"),\n  iconSize: [38, 38]\n});\n\nconst createClusterCustomIcon = function (cluster) {\n  return new divIcon({\n    html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\n    className: \"custom-marker-cluster\",\n    iconSize: point(33, 33, true)\n  });\n};\n\n// Define initial state for the textarea value\nconst initialTextAreaValue = '';\n\nexport default function App() {\n  // Declare state for textarea value\n  const [textAreaValue, setTextAreaValue] = useState(initialTextAreaValue);\n\n  const handleChange = (event) => {\n    setTextAreaValue(event.target.value);\n  };\n\n  const coordinates1 = [22.321760526446035, 87.30117421167117];\n\n  const markers = [\n    {\n      geocode: [22.31843237957934, 87.31335712758785],\n      popUp: (\n        <form>\n          <label>\n            Essay:\n            <textarea value={textAreaValue} onChange={handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      )\n    },\n    {\n      geocode: coordinates1,\n      popUp: \"MMM Hall\"\n    },\n    {\n      geocode: [22.31692265912584, 87.31720729745814],\n      popUp: \"Nalanda\"\n    }\n  ];\n\n  return (\n    <MapContainer center={[22.3149, 87.3105]} zoom={15}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <MarkerClusterGroup\n        chunkedLoading\n        iconCreateFunction={createClusterCustomIcon}\n      >\n        {markers.map((marker, index) => (\n          <Marker key={index} position={marker.geocode} icon={customIcon}>\n            <Popup>{marker.popUp}</Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n    </MapContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}